# -*- coding: utf-8 -*-
"""img_classify.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19Zxs_t5gBGgMruhAPL2iSGcsCPYYqu85
"""

from google.colab import drive
drive.mount('/content/drive/')

!pip install -U -q PyDrive

from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

downloaded = drive.CreateFile({'id':'10iCLojNi0tgsGuYU5iG7VSuNAZ1MzASl'})
downloaded.GetContentFile('train.csv')

import keras
from keras.models import Sequential
from keras.layers import Dense, Dropout, Flatten
from keras.layers import Conv2D, MaxPooling2D
from keras.utils import to_categorical
from keras.preprocessing import image
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from keras.utils import to_categorical
from tqdm import tqdm

train=pd.read_csv('train.csv')

train_image = []
for i in tqdm(range(train.shape[0])):
    img = image.load_img('/content/drive/My Drive/2/train/'+train['Image'][i], target_size=(28,28,3), grayscale=False)
    img = image.img_to_array(img)
    img = img/255
    train_image.append(img)
X = np.array(train_image)
X.shape

y=train['target'].values
for i in range(y.size):
    if y[i]=='manipuri':
        y[i]='0'
    elif y[i]=='bharatanatyam':
        y[i]='1'
    elif y[i]=='odissi':
        y[i]='2'
    elif y[i]=='kathakali':
        y[i]='3'
    elif y[i]=='kathak':
        y[i]='4'
    elif y[i]=='sattriya':
        y[i]='5'
    elif y[i]=='kuchipudi':
        y[i]='6'
    elif y[i]=='mohiniyattam':
        y[i]='7'
y = to_categorical(y)
print(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=0.2)

model = Sequential()
model.add(Conv2D(32, kernel_size=(3, 3),activation='relu',input_shape=(28,28,3)))
model.add(Conv2D(64, (3, 3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.25))
model.add(Flatten())
model.add(Dense(128, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(8, activation='softmax'))

model.compile(loss='categorical_crossentropy',optimizer='Adam',metrics=['accuracy'])

model.fit(X_train, y_train, epochs=2000, validation_data=(X_test, y_test))

downloaded = drive.CreateFile({'id':'1GvqWEEXwet3XU7pXngc2yCkatW41F8v3'})
downloaded.GetContentFile('test.csv')

test=pd.read_csv('test.csv')

test_image = []
for i in tqdm(range(test.shape[0])):
    img = image.load_img('/content/drive/My Drive/2/test/'+test['Image'][i], target_size=(28,28,3), grayscale=False)
    img = image.img_to_array(img)
    img = img/255
    test_image.append(img)
test = np.array(test_image)

prediction = model.predict_classes(test)

ans=pd.read_csv('test.csv')
label=[]
for i in range(prediction.size):
    if prediction[i]==0:
        label.append('manipuri')
    elif prediction[i]==1:
        label.append('bharatanatyam')
    elif prediction[i]==2:
        label.append('odissi')
    elif prediction[i]==3:
        label.append('kathakali')
    elif prediction[i]==4:
        label.append('kathak')
    elif prediction[i]==5:
        label.append('sattriya')
    elif prediction[i]==6:
        label.append('kuchipudi')
    elif prediction[i]==7:
        label.append('mohiniyattam')

label

ans['target']=label

ans

ans.to_csv('fans.csv', header=True, index=False)



